import chalk from 'chalk';
import { Command } from 'commander';
import { Client } from '@nosana/sdk';
import { getSDK } from '../../services/sdk.js';
import { config } from '../../generic/config.js';

const checkWalletCompromiseAPI = async (wallet: string): Promise<boolean> => {
  try {
    const response = await fetch(
      `${config.backendUrl}/nodes/${wallet}/vulnerability-check`,
    );

    const { likelihood } = await response.json();

    if (['LIKELY COMPROMISED', 'COMPROMISED'].includes(likelihood)) {
      return true;
    }

    if (likelihood === 'POTENTIALLY COMPROMISED') {
      console.log(
        chalk.yellow(
          'We have detected your wallet maybe compromised, therefore to avoid loss in funds we strongly advice you create a new wallet and re-onboard to testgrid.',
        ),
      );
    }

    return false;
  } catch (error: any) {
    console.error(
      chalk.red(`Failed to fetch node vulnerability check ${error.message}`),
    );
    process.exit(1);
  }
};
export const handleWalletVulnerability = async (
  actionCommand: Command,
): Promise<void> => {
  const sdk: Client = getSDK();
  const wallet = sdk.solana.wallet.publicKey.toString();

  const isCompromised = await checkWalletCompromiseAPI(wallet);

  if (isCompromised) {
    console.log(
      `${chalk.red(
        'We have detected that your wallet has been compromised, we recommend you migrate to a new wallet by running',
      )} ${chalk.yellow('nosana node migrate')})`,
    );
    process.exit(1);
  }
};
